{"version":3,"sources":["services/pixabey-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["API_KEY","searchQuery","page","axios","get","then","response","data","hits","Searchbar","state","text","onChange","e","value","target","setState","handleSubmit","preventDefault","onSubmit","props","this","className","type","autocomplete","autofocus","placeholder","Component","ImageGalleryItem","url","alt","openModal","modalImage","onClick","src","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","Button","changePage","Modal","closeModal","App","isOpenModal","isLoading","console","log","window","addEventListener","currentTarget","keyCode","removeEventListener","fetchImageGallery","pixabeyApi","prevState","finally","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.815573a2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '20186871-d4cb7e63badc121c032d79d10';\r\n\r\nconst fetchImageGallery = (searchQuery = '', page = 1) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchImageGallery };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    text: '',\r\n  };\r\n\r\n  onChange = e => {\r\n    const { value } = e.target;\r\n    this.setState({ text: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onSubmit } = this.props;\r\n\r\n    onSubmit(this.state.text);\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={text}\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ url, alt, openModal, modalImage }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => openModal(modalImage)}>\r\n      <img src={url} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n  modalImage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          url={image.webformatURL}\r\n          alt={image.tags}\r\n          modalImage={image.largeImageURL}\r\n          openModal={openModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ changePage }) => {\r\n  return (\r\n    <button type=\"button\" onClick={changePage} className=\"Button\">\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  changePage: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n// window.scrollTo({\r\n//     top: document.documentElement.scrollHeight,\r\n//     behavior: 'smooth',\r\n//   });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ modalImage, closeModal }) => {\r\n  return (\r\n    <div className=\"Overlay\" onClick={closeModal}>\r\n      <div className=\"Modal\">\r\n        <img src={modalImage} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  modalImage: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport pixabeyApi from './services/pixabey-api';\r\n\r\nimport Searchbar from './components/Searchbar/';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport Modal from './components/Modal/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n    images: [],\r\n    page: 1,\r\n    isOpenModal: false,\r\n    isLoading: false,\r\n    modalImage: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { page } = this.state;\r\n    if (prevState.page !== page) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n  openModal = modalImage => {\r\n    console.log(modalImage);\r\n    this.setState({ isOpenModal: true, modalImage });\r\n    window.addEventListener('keydown', this.closeModal);\r\n  };\r\n\r\n  closeModal = e => {\r\n    if (e.target === e.currentTarget || e.keyCode === 27)\r\n      this.setState({ isOpenModal: false });\r\n    window.removeEventListener('keydown', this.closeModal);\r\n  };\r\n\r\n  // toggleModal = e => {\r\n  //   this.state(({ isOpenModal }) => ({\r\n  //     isOpenModal: !isOpenModal,\r\n  //     modalImage: e,\r\n  //   }));\r\n  // };\r\n  fetchImageGallery = searchQuery => {\r\n    const { page } = this.state;\r\n\r\n    this.setState({ ...this.state, isLoading: true, searchQuery });\r\n\r\n    pixabeyApi\r\n      .fetchImageGallery(searchQuery, page)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          images: images,\r\n          page: 2,\r\n        }));\r\n      })\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  changePage = () => {\r\n    const { searchQuery, page } = this.state;\r\n    pixabeyApi.fetchImageGallery(searchQuery, page).then(images => {\r\n      this.setState(prevState => ({\r\n        images: [...prevState.images, ...images],\r\n        page: prevState.page + 1,\r\n      }));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      images,\r\n      isOpenModal,\r\n      openModal,\r\n      isLoading,\r\n      modalImage,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <Searchbar onSubmit={this.fetchImageGallery} />\r\n        {isLoading && <Loader />}\r\n        <ImageGallery images={images} openModal={this.openModal} />\r\n        {images.length > 0 && <Button changePage={this.changePage} />}\r\n        {isOpenModal && (\r\n          <Modal modalImage={modalImage} closeModal={this.closeModal} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}